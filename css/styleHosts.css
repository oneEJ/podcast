@import './global.css';
@import './nav.css';

/*font-family: 'Holtwood One SC', serif;*/

/*
.main {
    background: url("../images/hosts같이.png") no-repeat;
    background-size: 550px;}*/

.main h1 {
    font-family: 'Holtwood One SC', serif;
    text-align: center;
    margin-top: 50px;
    margin-bottom: 30px;
    font-size: 20px;
}

.main .main_text1 {
    display: block;
    width: 450px;
    padding: 20px;
    padding-top: 100px;
    z-index: 5;
    background-color: pink;
    text-align: right;
}
/*왜 포지션으로 다 조정하면 안좋다 했더라..?
position속성은 비교적 직관적이기 때문에 초보자 중에도 전체적인 레이아웃을 잡을 때 자주 사용하는 사람있어. 
하지만 엘리먼트 간의 겹치기 쉬운 속성 때문에 자주 사용하면 오히려 전체적인 레이아웃이 
쉽게 망가지거나 복잡해질 수 있어. 그러므로 정말 중요한 부분에서만 사용권장.
*/
.main .main_text2 {
    display: block;
    text-align: left;
    background-color: rgb(226, 43, 180);
    width: 630px;
    margin-top: 20%;
    margin-left: 50%;
    z-index: 10;
    padding: 20px;
}

.main .main_text3 {
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 50%;
    padding: 20px;
    /* order: 2; order은 flex에서만 되는점..*/
}

.main_image {
    position: relative;
    /* background-color: blueviolet; */
    display: block;
    margin-left: auto;
    margin-right: auto;
    width: 550px;
    height: 550px;
}

.main_image div{
    width: 850px;
    position: absolute;
    display: flex;
    justify-content: flex-start;
}

.main_image div p {
    font-family: 'Holtwood One SC', serif;
    font-size: 100px;
    line-height: 90px;
    background-color: orangered;
    width: 300px;
    margin-top: 100px;
    padding: 40px;
}

.main_image div img {
    width: 350px;
}

.main_image .hostA {
    background-color: bisque;
    z-index: -1;
    top:-650px;
}

.main_image .hostJ {
    background-color: brown;
    top: -50px;
    left: -50px;
    z-index: -1;
}

.main_image .hostJ img {
    order: 2;
}

.main_image .hostJ p {
    order: 1;
}

/*이름에 hover하면 약간 폭죽터지는 거 같은 그런 효과 */